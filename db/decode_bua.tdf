--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 20.1 cbx_cycloneii 2020:11:11:17:03:37:SJ cbx_lpm_add_sub 2020:11:11:17:03:37:SJ cbx_lpm_compare 2020:11:11:17:03:37:SJ cbx_lpm_decode 2020:11:11:17:03:37:SJ cbx_mgl 2020:11:11:17:50:46:SJ cbx_nadder 2020:11:11:17:03:37:SJ cbx_stratix 2020:11:11:17:03:37:SJ cbx_stratixii 2020:11:11:17:03:37:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode4718w[1..0]	: WIRE;
	w_anode4727w[3..0]	: WIRE;
	w_anode4744w[3..0]	: WIRE;
	w_anode4754w[3..0]	: WIRE;
	w_anode4764w[3..0]	: WIRE;
	w_anode4774w[3..0]	: WIRE;
	w_anode4784w[3..0]	: WIRE;
	w_anode4794w[3..0]	: WIRE;
	w_anode4804w[3..0]	: WIRE;
	w_anode4816w[1..0]	: WIRE;
	w_anode4823w[3..0]	: WIRE;
	w_anode4834w[3..0]	: WIRE;
	w_anode4844w[3..0]	: WIRE;
	w_anode4854w[3..0]	: WIRE;
	w_anode4864w[3..0]	: WIRE;
	w_anode4874w[3..0]	: WIRE;
	w_anode4884w[3..0]	: WIRE;
	w_anode4894w[3..0]	: WIRE;
	w_data4716w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode4894w[3..3], w_anode4884w[3..3], w_anode4874w[3..3], w_anode4864w[3..3], w_anode4854w[3..3], w_anode4844w[3..3], w_anode4834w[3..3], w_anode4823w[3..3]), ( w_anode4804w[3..3], w_anode4794w[3..3], w_anode4784w[3..3], w_anode4774w[3..3], w_anode4764w[3..3], w_anode4754w[3..3], w_anode4744w[3..3], w_anode4727w[3..3]));
	w_anode4718w[] = ( (w_anode4718w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode4727w[] = ( (w_anode4727w[2..2] & (! w_data4716w[2..2])), (w_anode4727w[1..1] & (! w_data4716w[1..1])), (w_anode4727w[0..0] & (! w_data4716w[0..0])), w_anode4718w[1..1]);
	w_anode4744w[] = ( (w_anode4744w[2..2] & (! w_data4716w[2..2])), (w_anode4744w[1..1] & (! w_data4716w[1..1])), (w_anode4744w[0..0] & w_data4716w[0..0]), w_anode4718w[1..1]);
	w_anode4754w[] = ( (w_anode4754w[2..2] & (! w_data4716w[2..2])), (w_anode4754w[1..1] & w_data4716w[1..1]), (w_anode4754w[0..0] & (! w_data4716w[0..0])), w_anode4718w[1..1]);
	w_anode4764w[] = ( (w_anode4764w[2..2] & (! w_data4716w[2..2])), (w_anode4764w[1..1] & w_data4716w[1..1]), (w_anode4764w[0..0] & w_data4716w[0..0]), w_anode4718w[1..1]);
	w_anode4774w[] = ( (w_anode4774w[2..2] & w_data4716w[2..2]), (w_anode4774w[1..1] & (! w_data4716w[1..1])), (w_anode4774w[0..0] & (! w_data4716w[0..0])), w_anode4718w[1..1]);
	w_anode4784w[] = ( (w_anode4784w[2..2] & w_data4716w[2..2]), (w_anode4784w[1..1] & (! w_data4716w[1..1])), (w_anode4784w[0..0] & w_data4716w[0..0]), w_anode4718w[1..1]);
	w_anode4794w[] = ( (w_anode4794w[2..2] & w_data4716w[2..2]), (w_anode4794w[1..1] & w_data4716w[1..1]), (w_anode4794w[0..0] & (! w_data4716w[0..0])), w_anode4718w[1..1]);
	w_anode4804w[] = ( (w_anode4804w[2..2] & w_data4716w[2..2]), (w_anode4804w[1..1] & w_data4716w[1..1]), (w_anode4804w[0..0] & w_data4716w[0..0]), w_anode4718w[1..1]);
	w_anode4816w[] = ( (w_anode4816w[0..0] & data_wire[3..3]), enable_wire);
	w_anode4823w[] = ( (w_anode4823w[2..2] & (! w_data4716w[2..2])), (w_anode4823w[1..1] & (! w_data4716w[1..1])), (w_anode4823w[0..0] & (! w_data4716w[0..0])), w_anode4816w[1..1]);
	w_anode4834w[] = ( (w_anode4834w[2..2] & (! w_data4716w[2..2])), (w_anode4834w[1..1] & (! w_data4716w[1..1])), (w_anode4834w[0..0] & w_data4716w[0..0]), w_anode4816w[1..1]);
	w_anode4844w[] = ( (w_anode4844w[2..2] & (! w_data4716w[2..2])), (w_anode4844w[1..1] & w_data4716w[1..1]), (w_anode4844w[0..0] & (! w_data4716w[0..0])), w_anode4816w[1..1]);
	w_anode4854w[] = ( (w_anode4854w[2..2] & (! w_data4716w[2..2])), (w_anode4854w[1..1] & w_data4716w[1..1]), (w_anode4854w[0..0] & w_data4716w[0..0]), w_anode4816w[1..1]);
	w_anode4864w[] = ( (w_anode4864w[2..2] & w_data4716w[2..2]), (w_anode4864w[1..1] & (! w_data4716w[1..1])), (w_anode4864w[0..0] & (! w_data4716w[0..0])), w_anode4816w[1..1]);
	w_anode4874w[] = ( (w_anode4874w[2..2] & w_data4716w[2..2]), (w_anode4874w[1..1] & (! w_data4716w[1..1])), (w_anode4874w[0..0] & w_data4716w[0..0]), w_anode4816w[1..1]);
	w_anode4884w[] = ( (w_anode4884w[2..2] & w_data4716w[2..2]), (w_anode4884w[1..1] & w_data4716w[1..1]), (w_anode4884w[0..0] & (! w_data4716w[0..0])), w_anode4816w[1..1]);
	w_anode4894w[] = ( (w_anode4894w[2..2] & w_data4716w[2..2]), (w_anode4894w[1..1] & w_data4716w[1..1]), (w_anode4894w[0..0] & w_data4716w[0..0]), w_anode4816w[1..1]);
	w_data4716w[2..0] = data_wire[2..0];
END;
--VALID FILE
